#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
TESTE R√ÅPIDO DE CONEX√ÉO POSTGRESQL - DASHBOARD TRANSPONTUAL
"""

import psycopg2
import os

def testar_conexao():
    """Testa conex√£o com PostgreSQL Railway"""
    
    print("üß™ TESTANDO CONEX√ÉO POSTGRESQL RAILWAY")
    print("=" * 45)
    
    # Configura√ß√£o Railway (usando URL p√∫blica)
    config = {
        'host': 'maglev.proxy.rlwy.net',
        'database': 'railway',
        'user': 'postgres', 
        'password': 'tioWAuMkDhjxvJMjqGnXbttoQvwsiVsz',
        'port': 18783,
        'sslmode': 'require'
    }
    
    try:
        print("üîå Tentando conectar...")
        conn = psycopg2.connect(**config)
        cursor = conn.cursor()
        
        print("‚úÖ Conex√£o estabelecida!")
        
        # Testar consulta
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        print(f"üìä PostgreSQL: {version[0][:60]}...")
        
        # Verificar se tabela dashboard_baker existe
        cursor.execute("""
            SELECT table_name FROM information_schema.tables 
            WHERE table_name = 'dashboard_baker'
        """)
        
        if cursor.fetchone():
            print("‚úÖ Tabela 'dashboard_baker' j√° existe")
            
            # Contar registros
            cursor.execute("SELECT COUNT(*) FROM dashboard_baker")
            count = cursor.fetchone()[0]
            print(f"üìä Registros na tabela: {count}")
            
        else:
            print("‚ö†Ô∏è Tabela 'dashboard_baker' n√£o existe (ser√° criada)")
        
        cursor.close()
        conn.close()
        
        print("\nüéâ CONEX√ÉO OK! Sistema pronto!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")
        return False

if __name__ == "__main__":
    testar_conexao()